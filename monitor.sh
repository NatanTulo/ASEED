#!/bin/bash

# Kolory
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

log_info() {
    echo -e "${BLUE}‚ÑπÔ∏è  $1${NC}"
}

log_success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

show_menu() {
    echo "üìä Monitoring Online Store Order Analysis"
    echo "========================================="
    echo ""
    echo "Wybierz co chcesz monitorowaƒá:"
    echo ""
    echo "1) Logi analizatora danych (wyniki analiz)"
    echo "2) Logi symulatora zam√≥wie≈Ñ"
    echo "3) Logi Kafka"
    echo "4) Logi Zookeeper"
    echo "5) Status wszystkich proces√≥w"
    echo "6) Wszystkie logi na ≈ºywo"
    echo "7) Wyj≈õcie"
    echo ""
    echo -n "Wyb√≥r [1-7]: "
}

monitor_data_analyzer() {
    log_info "Monitorowanie analizatora danych (Ctrl+C aby wr√≥ciƒá do menu)"
    echo "================================================================"
    if [ -f "logs/data_analyzer.log" ]; then
        tail -f logs/data_analyzer.log
    else
        echo "Plik logs/data_analyzer.log nie istnieje"
        echo "Czy analizator jest uruchomiony? Sprawd≈∫: ./start.sh"
    fi
}

monitor_order_simulator() {
    log_info "Monitorowanie symulatora zam√≥wie≈Ñ (Ctrl+C aby wr√≥ciƒá do menu)"
    echo "=============================================================="
    if [ -f "logs/order_simulator.log" ]; then
        tail -f logs/order_simulator.log
    else
        echo "Plik logs/order_simulator.log nie istnieje"
        echo "Czy symulator jest uruchomiony? Sprawd≈∫: ./start.sh"
    fi
}

monitor_kafka() {
    log_info "Monitorowanie Kafka (Ctrl+C aby wr√≥ciƒá do menu)"
    echo "==============================================="
    if [ -f "logs/kafka.log" ]; then
        tail -f logs/kafka.log
    else
        echo "Plik logs/kafka.log nie istnieje"
        echo "Czy Kafka jest uruchomiona? Sprawd≈∫: ./start.sh"
    fi
}

monitor_zookeeper() {
    log_info "Monitorowanie Zookeeper (Ctrl+C aby wr√≥ciƒá do menu)"
    echo "=================================================="
    if [ -f "logs/zookeeper.log" ]; then
        tail -f logs/zookeeper.log
    else
        echo "Plik logs/zookeeper.log nie istnieje"
        echo "Czy Zookeeper jest uruchomiony? Sprawd≈∫: ./start.sh"
    fi
}

show_process_status() {
    log_info "Status proces√≥w systemu"
    echo "======================="
    echo ""
    
    # Sprawd≈∫ Zookeeper
    if pgrep -f "kafka.zookeeper" > /dev/null; then
        ZK_PID=$(pgrep -f "kafka.zookeeper")
        log_success "Zookeeper: DZIA≈ÅA (PID: $ZK_PID)"
    else
        echo -e "${RED}‚ùå Zookeeper: NIE DZIA≈ÅA${NC}"
    fi
    
    # Sprawd≈∫ Kafka
    if pgrep -f "kafka.Kafka" > /dev/null; then
        KAFKA_PID=$(pgrep -f "kafka.Kafka")
        log_success "Kafka: DZIA≈ÅA (PID: $KAFKA_PID)"
    else
        echo -e "${RED}‚ùå Kafka: NIE DZIA≈ÅA${NC}"
    fi
    
    # Sprawd≈∫ Order Simulator
    if pgrep -f "order_simulator.py" > /dev/null; then
        SIM_PID=$(pgrep -f "order_simulator.py")
        log_success "Order Simulator: DZIA≈ÅA (PID: $SIM_PID)"
    else
        echo -e "${RED}‚ùå Order Simulator: NIE DZIA≈ÅA${NC}"
    fi
    
    # Sprawd≈∫ Data Analyzer
    if pgrep -f "data_analyzer.py" > /dev/null; then
        ANA_PID=$(pgrep -f "data_analyzer.py")
        log_success "Data Analyzer: DZIA≈ÅA (PID: $ANA_PID)"
    else
        echo -e "${RED}‚ùå Data Analyzer: NIE DZIA≈ÅA${NC}"
    fi
    
    echo ""
    
    # Sprawd≈∫ porty
    log_info "Status port√≥w:"
    if netstat -ln 2>/dev/null | grep -q ":2181"; then
        log_success "Port 2181 (Zookeeper): OTWARTY"
    else
        echo -e "${RED}‚ùå Port 2181 (Zookeeper): ZAMKNIƒòTY${NC}"
    fi
    
    if netstat -ln 2>/dev/null | grep -q ":9092"; then
        log_success "Port 9092 (Kafka): OTWARTY"
    else
        echo -e "${RED}‚ùå Port 9092 (Kafka): ZAMKNIƒòTY${NC}"
    fi
    
    echo ""
    echo -n "Naci≈õnij Enter aby wr√≥ciƒá do menu..."
    read
}

monitor_all_logs() {
    log_info "Monitorowanie wszystkich log√≥w (Ctrl+C aby wr√≥ciƒá do menu)"
    echo "=========================================================="
    
    # Sprawd≈∫ kt√≥re pliki log√≥w istniejƒÖ
    log_files=""
    
    if [ -f "logs/data_analyzer.log" ]; then
        log_files="$log_files logs/data_analyzer.log"
    fi
    
    if [ -f "logs/order_simulator.log" ]; then
        log_files="$log_files logs/order_simulator.log"
    fi
    
    if [ -f "logs/kafka.log" ]; then
        log_files="$log_files logs/kafka.log"
    fi
    
    if [ -f "logs/zookeeper.log" ]; then
        log_files="$log_files logs/zookeeper.log"
    fi
    
    if [ -n "$log_files" ]; then
        tail -f $log_files
    else
        echo "Brak plik√≥w log√≥w do monitorowania"
        echo "Czy system jest uruchomiony? Sprawd≈∫: ./start.sh"
        echo ""
        echo -n "Naci≈õnij Enter aby wr√≥ciƒá do menu..."
        read
    fi
}

main() {
    while true; do
        clear
        show_menu
        read choice
        
        case $choice in
            1)
                clear
                monitor_data_analyzer
                ;;
            2)
                clear
                monitor_order_simulator
                ;;
            3)
                clear
                monitor_kafka
                ;;
            4)
                clear
                monitor_zookeeper
                ;;
            5)
                clear
                show_process_status
                ;;
            6)
                clear
                monitor_all_logs
                ;;
            7)
                echo ""
                log_info "Do widzenia!"
                exit 0
                ;;
            *)
                echo ""
                echo -e "${RED}Nieprawid≈Çowy wyb√≥r. Spr√≥buj ponownie.${NC}"
                sleep 2
                ;;
        esac
    done
}

main "$@"
